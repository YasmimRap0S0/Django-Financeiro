name: Django CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11.13, 3.12.10]

    steps:
    - uses: actions/checkout@v4.1.0

    - name: Configurar Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.7.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Instalar dependências vulneráveis
      run: |
        python -m pip install --upgrade pip
        pip install -r mysite/requirements.txt
        pip install pylint

    - name: Verificar código deprecado
      run: |
        pylint mysite/financeiro/ \
          --disable=all \
          --enable=deprecated-module,deprecated-method \
          --fail-under=10

    - name: Rodar testes
      run: |
        cd mysite
        python manage.py test financeiro

    - name: Copiar pacotes instalados para escaneamento
      run: |
        mkdir -p scan-target
        cp -r $(python -c "import site; print(site.getsitepackages()[0])")/* scan-target/

    - name: Rodar OWASP Dependency-Check
      uses: dependency-check/Dependency-Check_Action@main
      env:
        OSSINDEX_USERNAME: ${{ secrets.OSSINDEX_USERNAME }}
        OSSINDEX_PASSWORD: ${{ secrets.OSSINDEX_PASSWORD }}
      with:
        project: "Django Financeiro REPORT"
        path: "./scan-target"
        format: "HTML"
        out: "reports/${{ matrix.python-version }}"


    - name: Salvar relatório OWASP
      uses: actions/upload-artifact@v4
      with:
        name: owasp-report-${{ matrix.python-version }}
        path: reports/${{ matrix.python-version }}/dependency-check-report.html
